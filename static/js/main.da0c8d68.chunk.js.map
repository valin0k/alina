{"version":3,"sources":["Field/index.js","Timer/index.js","Form/index.js","App.js","index.js"],"names":["getResult","val1","val2","sign","showAnswer","onGetResult","onFillField","index","useState","value","setValue","useEffect","Number","isRight","className","maxLength","disabled","onChange","num","target","isNaN","trim","length","stop","Date","now","startTimer","endTimer","setEndTimer","time","mins","Math","floor","sec","getTime","randomInteger","min","max","rand","random","round","generateRandomData","count","Array","fill","map","_","i","firstValue","secondValue","key","congratulationText","right","wrong","Form","data","rightAnswers","setRightAnswers","wrongAnswers","setWrongAnswers","setShowAnswer","filledFields","setFilledFields","result","canSubmit","Object","values","filter","Boolean","item","checkAnswers","Timer","onClick","App","roundsCount","setRoundsCount","start","setStart","reset","setReset","placeholder","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.da0c8d68.chunk.js","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport \"./index.css\";\n\nfunction getResult(val1, val2, sign) {\n  return sign === '+' ? val1 + val2 : val1 - val2\n}\n\nexport default function ({ val1, val2, sign, showAnswer, onGetResult, onFillField, index }) {\n  const [value, setValue] = useState('')\n\n  const onChange = (value) => {\n    const num = value.target.value\n    if(!isNaN(num)) {\n      setValue(num.trim())\n\n      onFillField(!!num.trim().length, index)\n    }\n  }\n\n  useEffect(() => {\n    showAnswer && onGetResult(value && getResult(val1, val2, sign) === Number(value))\n  }, [showAnswer])\n\n  const isRight = showAnswer && value && getResult(val1, val2, sign) === Number(value)\n\n  return (\n    <div className=\"wrapper\">\n      <div className=\"values\">\n        <div className={'val'}>{val1}</div>\n        <div className={sign === '+' ? 'plus_sign' : 'minus_sign'}>{sign}</div>\n        <div className={'val'}>{val2}</div>\n        <div className={'equal_sign'}>=</div>\n      </div>\n\n\n      {showAnswer && value ? (\n        <>\n          <div className={'yourAnswer'}>\n            {value}\n            <span className={'rightAnswer'}>{!isRight ? ' (' + getResult(val1, val2, sign) + ') ' : null}</span>\n          </div>\n          <div className={'answer ' + (isRight ? 'answerTrue' : 'answerFalse')}>\n            {isRight ? '‚úì' : '‚úñÔ∏è'}\n          </div>\n        </>\n      ) : <input maxLength={2} value={value} className=\"input\" disabled={showAnswer} onChange={onChange} />}\n    </div>\n  );\n}\n","import React, {useEffect, useState} from 'react'\n\nfunction getTime(time) {\n  const mins = Math.floor(time / 60000)\n  const sec = time - (mins * 60000)\n\n  return '–¢—ã —Å–ø—Ä–∞–≤–∏–ª–∞—Å—å –∑–∞: ' + mins + ' –º–∏–Ω. ' + Math.floor(sec / 1000) + ' —Å–µ–∫.'\n}\n\nexport default ({stop}) => {\n  const [startTimer, setStartTimer] = useState(Date.now())\n  const [endTimer, setEndTimer] = useState(0)\n\n  useEffect(() => {\n    stop && setEndTimer(Date.now)\n  }, [stop])\n\n  return (\n    <div>\n      {endTimer && stop ? getTime(endTimer - startTimer) : null}\n    </div>\n  )\n}\n","import React, {useState} from 'react';\nimport Field from '../Field'\nimport Timer from '../Timer'\nimport \"./index.css\";\n\nfunction randomInteger(min, max) {\n  let rand = min - 0.5 + Math.random() * (max - min + 1);\n  return Math.round(rand);\n}\n\nfunction generateRandomData(count, min, max) {\n  return Array(count).fill(1).map((_, i) => {\n    const sign = Math.random() > 0.5 ? '+' : '-'\n\n    let firstValue\n    let secondValue\n\n    firstValue = randomInteger(min, max)\n    secondValue = randomInteger(min, max)\n\n    if(sign === '+') {\n      while(firstValue + secondValue > max) {\n        firstValue = randomInteger(min, max)\n        secondValue = randomInteger(min, max)\n      }\n\n      return {\n        sign,\n        val1: firstValue,\n        val2: secondValue,\n        key: Math.random(),\n        index: i\n      }\n    }\n\n    return {\n      sign,\n      val1: firstValue > secondValue ? firstValue : secondValue,\n      val2: firstValue > secondValue ? secondValue : firstValue,\n      key: Math.random(),\n      index: i\n    }\n  })\n}\n\nconst congratulationText = [\n  '–ü–æ–∑–¥—Ä–∞–≤–ª—è—é –ê–ª–∏–Ω–∞!!! –¢—ã –±–æ–ª—å—à–∞—è —É–º–Ω–∏—á–∫–∞! üéâ –ù–∏ –æ–¥–Ω–æ–π –æ—à–∏–±–∫–∏ :)',\n  '–£—Ä–∞–∞–∞!!! –í—Å–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ! üòÑ –ù–∞—É—á–∏—à—å –º–µ–Ω—è?',\n  '–¢—ã —Ç–∞–∫–∞—è –º–æ–ª–æ–¥–µ—Ü! –õ–µ–≥–∫–æ —Å–ø—Ä–∞–≤–∏–ª–∞—Å—å —Å–æ –≤—Å–µ–º–∏ –∑–∞–¥–∞—á–∫–∞–º–∏, –¥–∞–≤–∞–π –ø–æ–≤—Ç–æ—Ä–∏–º'\n]\n\nconst data = generateRandomData(15, 1, 19)\n\nlet right = 0\nlet wrong = 0\n\nexport default function Form({count, min, max}) {\n  const [data, setData] = useState(generateRandomData(count, min, max))\n  const [rightAnswers, setRightAnswers] = useState(0)\n  const [wrongAnswers, setWrongAnswers] = useState(0)\n  const [showAnswer, setShowAnswer] = useState(false)\n  const [filledFields, setFilledFields] = useState({})\n\n  const onPress = () => setShowAnswer(true)\n\n  const onGetResult = (result) => {\n    if (result) {\n      ++right\n      setRightAnswers(right)\n    } else {\n      ++wrong\n      setWrongAnswers(wrong)\n    }\n  }\n\n  const onFillField = (value, index) => {\n    setFilledFields({...filledFields, [index]: value})\n  }\n\n  const canSubmit = Object.values(filledFields).filter(Boolean).length === count\n\n  return (\n    <div className=\"form\">\n      {data.map(item => (\n        <Field\n          {...item}\n          showAnswer={showAnswer}\n          onGetResult={onGetResult}\n          checkAnswers={false}\n          key={item.key}\n          onFillField={onFillField}\n        />\n      ))}\n\n      <Timer stop={showAnswer} />\n      {showAnswer ? (\n        <div>\n          <br/>\n          <div>–ü—Ä–∞–≤–∏–ª—å–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã: <span className={'rightText'}>{rightAnswers}</span></div>\n          {Number(wrongAnswers)? <div>–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã: <span className={'wrongText'}>{wrongAnswers}</span></div> : null}\n          {!(Number(wrongAnswers)) ? <div>{congratulationText[randomInteger(0,2)]}</div> : null}\n        </div>\n      ) : <button className={'submit_btn' + (canSubmit ? ' start_btn' : ' disabled_btn')} disabled={!canSubmit} onClick={onPress}>–ì–æ—Ç–æ–≤–æ!</button>}\n    </div>\n  );\n}\n","import React, {useState, useEffect} from 'react';\nimport Field from './Field'\nimport Timer from './Timer'\nimport Form from './Form'\nimport './App.css';\n\nfunction App() {\n  const [roundsCount, setRoundsCount] = useState('')\n  const [start, setStart] = useState(false)\n  const [reset, setReset] = useState(false)\n\n  const onStartPress = () => setStart(true)\n\n  const onReset = () => setReset(true)\n\n  const onChange = ({target: {value}}) => {\n    if(!isNaN(value)) {\n      setRoundsCount(value.trim())\n    }\n  }\n\n  useEffect(() => {\n    reset && setReset(false)\n  }, [reset])\n\n  if(reset) return (\n    <div className=\"App\">\n      <div className={'container'}>\n      </div>\n    </div>\n  )\n\n  return (\n    <div className=\"App\">\n      {start ? (\n        <div className={'container'}>\n          <Form count={Number(roundsCount) || 8} min={1} max={19} />\n          <button className={'submit_btn reset_btn'} onClick={onReset}>–ó–∞–Ω–æ–≤–æ</button>\n        </div>\n      ) : (\n        <div className={'greeting'}>\n          <h2 className={'alina'}>–ü—Ä–∏–≤–µ—Ç, –ê–ª–∏–Ω–∞!</h2>\n          <div className={'fieldItem'}>\n            <div className={'label'}>–°–∫–æ–ª—å–∫–æ –ø—Ä–∏–º–µ—Ä–æ–≤ –±—É–¥–µ–º —Ä–µ—à–∞—Ç—å?</div>\n            <input placeholder={'–ö–∞–∫ –Ω–∞—Å—á–µ—Ç 8?'} className={'roundInput'} onChange={onChange} value={roundsCount}/>\n          </div>\n          <button className={'submit_btn start_btn'} onClick={onStartPress}>–ù–∞—á–∞—Ç—å</button>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}