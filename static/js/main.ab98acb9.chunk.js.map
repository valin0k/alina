{"version":3,"sources":["Field/index.js","Timer/index.js","Form/index.js","App.js","index.js"],"names":["getResult","val1","val2","sign","showAnswer","onGetResult","useState","value","setValue","useEffect","Number","isRight","className","maxLength","disabled","onChange","num","target","isNaN","trim","stop","Date","now","startTimer","endTimer","setEndTimer","time","mins","Math","floor","sec","getTime","randomInteger","min","max","rand","random","round","generateRandomData","count","Array","fill","map","_","firstValue","secondValue","right","wrong","Form","data","rightAnswers","setRightAnswers","wrongAnswers","setWrongAnswers","setShowAnswer","result","item","checkAnswers","Timer","onClick","App","roundsCount","setRoundsCount","start","setStart","reset","setReset","placeholder","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ab98acb9.chunk.js","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport \"./index.css\";\n\nfunction getResult(val1, val2, sign) {\n  return sign === '+' ? val1 + val2 : val1 - val2\n}\n\nexport default function ({ val1, val2, sign, showAnswer, onGetResult }) {\n  const [value, setValue] = useState('')\n\n  const onChange = (value) => {\n    const num = value.target.value\n    if(!isNaN(num)) {\n      setValue(num.trim())\n    }\n  }\n\n  useEffect(() => {\n    showAnswer && onGetResult(value && getResult(val1, val2, sign) === Number(value))\n  }, [showAnswer])\n\n  const isRight = showAnswer && value && getResult(val1, val2, sign) === Number(value)\n\n  return (\n    <div className=\"wrapper\">\n      <div className=\"values\">\n        <div className={'val'}>{val1}</div>\n        <div className={sign === '+' ? 'plus_sign' : 'minus_sign'}>{sign}</div>\n        <div className={'val'}>{val2}</div>\n        <div className={'equal_sign'}>=</div>\n      </div>\n\n\n      {showAnswer && value ? (\n        <>\n          <div className={'yourAnswer'}>\n            {value}\n            <span className={'rightAnswer'}>{!isRight ? ' (' + getResult(val1, val2, sign) + ') ' : null}</span>\n          </div>\n          <div className={'answer ' + (isRight ? 'answerTrue' : 'answerFalse')}>\n            {isRight ? '✓' : '✖️'}\n          </div>\n        </>\n      ) : <input maxLength={2} value={value} className=\"input\" disabled={showAnswer} onChange={onChange} />}\n    </div>\n  );\n}\n","import React, {useEffect, useState} from 'react'\n\nfunction getTime(time) {\n  const mins = Math.floor(time / 60000)\n  const sec = time - (mins * 60000)\n\n  return 'Ты справилась за: ' + mins + ' мин. ' + Math.floor(sec / 1000) + ' сек.'\n}\n\nexport default ({stop}) => {\n  const [startTimer, setStartTimer] = useState(Date.now())\n  const [endTimer, setEndTimer] = useState(0)\n\n  useEffect(() => {\n    stop && setEndTimer(Date.now)\n  }, [stop])\n\n  return (\n    <div>\n      {endTimer && stop ? getTime(endTimer - startTimer) : null}\n    </div>\n  )\n}\n","import React, {useState} from 'react';\nimport Field from '../Field'\nimport Timer from '../Timer'\nimport \"./index.css\";\n\nfunction randomInteger(min, max) {\n  let rand = min - 0.5 + Math.random() * (max - min + 1);\n  return Math.round(rand);\n}\n\nfunction generateRandomData(count, min, max) {\n  return Array(count).fill(1).map((_) => {\n    const sign = Math.random() > 0.5 ? '+' : '-'\n    let firstValue = randomInteger(min, max)\n    let secondValue = randomInteger(min, max)\n\n    return {\n      sign,\n      val1: firstValue > secondValue ? firstValue : secondValue,\n      val2: firstValue > secondValue ? secondValue : firstValue\n    }\n  })\n}\n\nconst data = generateRandomData(15, 1, 19)\n\nlet right = 0\nlet wrong = 0\nlet unfilled = 0\n\nexport default function Form({count, min, max}) {\n  const [data, setData] = useState(generateRandomData(count, min, max))\n  const [rightAnswers, setRightAnswers] = useState(0)\n  const [wrongAnswers, setWrongAnswers] = useState(0)\n  const [showAnswer, setShowAnswer] = useState(false)\n  const [filledFields, setFilledFields] = useState(0)\n\n  const onPress = () => setShowAnswer(true)\n\n  const onGetResult = (result) => {\n    if (result) {\n      ++right\n      setRightAnswers(right)\n    } else {\n      ++wrong\n      setWrongAnswers(wrong)\n    }\n  }\n\n  return (\n    <div className=\"form\">\n      {data.map(item => (\n        <Field {...item} showAnswer={showAnswer} onGetResult={onGetResult} checkAnswers={false} />\n      ))}\n\n      <Timer stop={showAnswer} />\n      {showAnswer ? (\n        <div>\n          <br/>\n          <div>Правильные ответы: {rightAnswers}</div>\n          <div>Неправильные ответы: {wrongAnswers}</div>\n        </div>\n      ) : null}\n\n      <button className={'submit_btn'} disabled={showAnswer} onClick={onPress}>Готово!</button>\n    </div>\n  );\n}\n","import React, {useState, useEffect} from 'react';\nimport Field from './Field'\nimport Timer from './Timer'\nimport Form from './Form'\nimport './App.css';\n\nfunction App() {\n  const [roundsCount, setRoundsCount] = useState('')\n  const [start, setStart] = useState(false)\n  const [reset, setReset] = useState(false)\n\n  const onStartPress = () => setStart(true)\n\n  const onReset = () => setReset(true)\n\n  const onChange = ({target: {value}}) => {\n    if(!isNaN(value)) {\n      setRoundsCount(value.trim())\n    }\n  }\n\n  useEffect(() => {\n    reset && setReset(false)\n  }, [reset])\n\n  if(reset) return (\n    <div className=\"App\">\n      <div className={'container'}>\n      </div>\n    </div>\n  )\n\n  return (\n    <div className=\"App\">\n      {start ? (\n        <div className={'container'}>\n          <Form count={Number(roundsCount) || 8} min={1} max={19} />\n          <button className={'submit_btn'} onClick={onReset}>Заново</button>\n        </div>\n      ) : (\n        <div className={'greeting'}>\n          <h2>Привет, Алина!</h2>\n          <div className={'fieldItem'}>\n            <div className={'label'}>Сколько примеров будем решать?</div>\n            <input placeholder={'Как насчет 8?'} className={'roundInput'} onChange={onChange} value={roundsCount}/>\n          </div>\n          <button className={'submit_btn'} onClick={onStartPress}>Начать</button>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}