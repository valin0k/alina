{"version":3,"sources":["Field/index.js","Timer/index.js","helpers/index.js","Form/index.js","Results/index.js","App.js","index.js"],"names":["getResult","val1","val2","sign","showAnswer","onGetResult","onFillField","index","useState","value","setValue","useEffect","Number","isRight","className","maxLength","disabled","onChange","num","target","isNaN","trim","length","inputMode","stop","onStop","Date","now","startTimer","endTimer","setEndTimer","time","mins","Math","floor","sec","getTime","getKey","date","newDate","year","getFullYear","month","getMonth","day","getDate","getTodayData","todayData","localStorage","getItem","JSON","parse","monthNames","randomInteger","min","max","rand","random","round","generateRandomData","count","Array","fill","map","_","i","firstValue","secondValue","key","congratulationText","right","wrong","timer","Form","data","rightAnswers","setRightAnswers","wrongAnswers","setWrongAnswers","setShowAnswer","filledFields","setFilledFields","result","React","rightCount","wrongCount","newData","stringify","setItem","addEntryToday","canSubmit","Object","values","filter","Boolean","item","checkAnswers","Timer","onClick","days","lastItem","counter","setDate","push","getPeriodData","totalCount","style","flex","App","roundsCount","setRoundsCount","start","setStart","reset","setReset","showHistory","setShowHistory","placeholder","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a8d09f0d.chunk.js","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport \"./index.css\";\n\nfunction getResult(val1, val2, sign) {\n  return sign === '+' ? val1 + val2 : val1 - val2\n}\n\nexport default function ({ val1, val2, sign, showAnswer, onGetResult, onFillField, index }) {\n  const [value, setValue] = useState('')\n\n  const onChange = (value) => {\n    const num = value.target.value\n    if(!isNaN(num)) {\n      setValue(num.trim())\n\n      onFillField(!!num.trim().length, index)\n    }\n  }\n\n  useEffect(() => {\n    showAnswer && onGetResult(value && getResult(val1, val2, sign) === Number(value))\n  }, [showAnswer])\n\n  const isRight = showAnswer && value && getResult(val1, val2, sign) === Number(value)\n\n  return (\n    <div className=\"wrapper\">\n      <div className=\"values\">\n        <div className={'val'}>{val1}</div>\n        <div className={sign === '+' ? 'plus_sign' : 'minus_sign'}>{sign}</div>\n        <div className={'val'}>{val2}</div>\n        <div className={'equal_sign'}>=</div>\n      </div>\n\n\n      {showAnswer && value ? (\n        <>\n          <div className={'yourAnswer'}>\n            {value}\n            <span className={'rightAnswer'}>{!isRight ? ' (' + getResult(val1, val2, sign) + ') ' : null}</span>\n          </div>\n          <div className={'answer ' + (isRight ? 'answerTrue' : 'answerFalse')}>\n            {isRight ? '✓' : '✖️'}\n          </div>\n        </>\n      ) : <input maxLength={2} value={value} className=\"input\" disabled={showAnswer} onChange={onChange} inputMode={'numeric'} />}\n    </div>\n  );\n}\n","import React, {useEffect, useState} from 'react'\n\nfunction getTime(time) {\n  const mins = Math.floor(time / 60000)\n  const sec = time - (mins * 60000)\n\n  return 'Ты справилась за: ' + mins + ' мин. ' + Math.floor(sec / 1000) + ' сек.'\n}\n\nexport default ({stop, onStop}) => {\n  const [startTimer, setStartTimer] = useState(Date.now())\n  const [endTimer, setEndTimer] = useState(0)\n\n  useEffect(() => {\n    if(stop) {\n      setEndTimer(Date.now)\n      onStop(Date.now() - startTimer)\n    }\n  }, [stop])\n\n  return (\n    <div>\n      {endTimer && stop ? getTime(endTimer - startTimer) : null}\n    </div>\n  )\n}\n","export const getKey = (date = Date.now()) => {\n  const newDate = new Date(date)\n  const year = newDate.getFullYear()\n  const month = newDate.getMonth()\n  const day = newDate.getDate()\n  return `${year}/${month}/${day}}`\n}\n\nexport const getTodayData = (date) => {\n  const todayData = localStorage.getItem(getKey(date))\n\n  if(todayData) {\n    return JSON.parse(todayData)\n  } else {\n    return null\n  }\n}\n\nexport const addEntryToday = (rightCount, wrongCount, time) => {\n  const key = getKey()\n  const newData = JSON.stringify({rightCount, wrongCount, time})\n\n  const todayData = getTodayData()\n  if(todayData) {\n    localStorage.setItem(key, JSON.stringify({\n      rightCount: rightCount + todayData.rightCount,\n      wrongCount: wrongCount + todayData.wrongCount,\n      time: time + todayData.time\n    }))\n  } else {\n    localStorage.setItem(key, newData)\n  }\n}\n\nexport const getPeriodData = (days) => {\n  const data = []\n  let lastItem = 1\n  let counter = 0\n\n  const date = new Date(); // today\n\n  while((days && days > counter) || (!days && !lastItem)) {\n    lastItem = getTodayData(date.setDate(date.getDate() - (counter ? 1 : 0)))\n\n    data.push({...lastItem, date: `${date.getDate()} ${monthNames[date.getMonth()]}`})\n    ++counter\n  }\n\n  return data\n}\n\nconst monthNames = [\"января\", \"февраля\", \"марта\", \"апреля\", \"мая\", \"июня\",\n  \"июля\", \"августа\", \"сентября\", \"октября\", \"ноября\", \"декабря\"\n];\n","import React, {useState} from 'react';\nimport Field from '../Field'\nimport Timer from '../Timer'\nimport { addEntryToday } from '../helpers'\nimport \"./index.css\";\n\nfunction randomInteger(min, max) {\n  let rand = min - 0.5 + Math.random() * (max - min + 1);\n  return Math.round(rand);\n}\n\nfunction generateRandomData(count, min, max) {\n  return Array(count).fill(1).map((_, i) => {\n    const sign = Math.random() > 0.5 ? '+' : '-'\n\n    let firstValue\n    let secondValue\n\n    firstValue = randomInteger(min, max)\n    secondValue = randomInteger(min, max)\n\n    if(sign === '+') {\n      while(firstValue + secondValue > max) {\n        firstValue = randomInteger(min, max)\n        secondValue = randomInteger(min, max)\n      }\n\n      return {\n        sign,\n        val1: firstValue,\n        val2: secondValue,\n        key: Math.random(),\n        index: i\n      }\n    }\n\n    return {\n      sign,\n      val1: firstValue > secondValue ? firstValue : secondValue,\n      val2: firstValue > secondValue ? secondValue : firstValue,\n      key: Math.random(),\n      index: i\n    }\n  })\n}\n\nconst congratulationText = [\n  'Поздравляю Алина!!! Ты большая умничка! 🎉 Ни одной ошибки :)',\n  'Урааа!!! Все правильно! 😄 Научишь меня?',\n  'Ты такая молодец! Легко справилась со всеми задачками, давай повторим'\n]\n\nconst data = generateRandomData(15, 1, 19)\n\nlet right = 0\nlet wrong = 0\nlet timer = 0\n\nexport default function Form({count, min, max}) {\n  const [data, setData] = useState(generateRandomData(count, min, max))\n  const [rightAnswers, setRightAnswers] = useState(0)\n  const [wrongAnswers, setWrongAnswers] = useState(0)\n  const [showAnswer, setShowAnswer] = useState(false)\n  const [filledFields, setFilledFields] = useState({})\n\n  const onPress = () => setShowAnswer(true)\n\n  const onGetResult = (result) => {\n    if (result) {\n      ++right\n      setRightAnswers(right)\n    } else {\n      ++wrong\n      setWrongAnswers(wrong)\n    }\n  }\n\n  const onFillField = (value, index) => {\n    setFilledFields({...filledFields, [index]: value})\n  }\n\n  const onTimerStop = (time) => {\n    timer = time\n  }\n\n  React.useEffect(() => {\n    if(showAnswer) {\n      addEntryToday(right, wrong, timer)\n      right = 0\n      wrong = 0\n      timer = 0\n    }\n  }, [showAnswer])\n\n  const canSubmit = Object.values(filledFields).filter(Boolean).length === count\n\n  return (\n    <div className=\"form\">\n      {data.map(item => (\n        <Field\n          {...item}\n          showAnswer={showAnswer}\n          onGetResult={onGetResult}\n          checkAnswers={false}\n          key={item.key}\n          onFillField={onFillField}\n        />\n      ))}\n\n      <Timer stop={showAnswer} onStop={onTimerStop} />\n      {showAnswer ? (\n        <div>\n          <br/>\n          <div>Правильные ответы: <span className={'rightText'}>{rightAnswers}</span></div>\n          {Number(wrongAnswers)? <div>Неправильные ответы: <span className={'wrongText'}>{wrongAnswers}</span></div> : null}\n          {!(Number(wrongAnswers)) ? <div>{congratulationText[randomInteger(0,2)]}</div> : null}\n        </div>\n      ) : <button className={'submit_btn' + (canSubmit ? ' start_btn' : ' disabled_btn')} disabled={!canSubmit} onClick={onPress}>Готово!</button>}\n    </div>\n  );\n}\n","import React from 'react'\nimport {getPeriodData} from '../helpers'\nimport './index.css'\n\nfunction getTime(time) {\n  const mins = Math.floor(time / 60000)\n  const sec = time - (mins * 60000)\n\n  return mins + ' мин. ' + Math.floor(sec / 1000) + ' сек.'\n}\n\nexport default () => {\n  const data = getPeriodData(50) || []\n\n  if(!data.length) {\n    return (\n      <div>Пока ничего нету, самое время решить несколько задачек!</div>\n    )\n  }\n  return (\n    <div className={'historyList'}>\n      {data.map((item) => {\n        const date = new Date(item.time)\n        const month = date.getMonth()\n        const day = date.getDate()\n        const totalCount = item.wrongCount + item.rightCount\n\n        if(!item.time) return null\n\n        return (\n          <div key={item.time} className={'historyItem'}>\n            <div className={'historyDate'}>{item.date}</div>\n            <div className={'grayText'}>Время занятий: <span className={'darkText'}>{getTime(item.time)}</span></div>\n            <div className={'grayText'}>Правильные ответы: <span className={'rightText'}>{item.rightCount}</span></div>\n            <div className={'grayText'}>Неправильные ответы: <span className={'wrongText'}>{item.wrongCount}</span></div>\n            <div className={'progressLine'}>\n              <div className={'progressRight'} style={{flex: item.rightCount / totalCount}}></div>\n              <div className={'progressWrong'} style={{flex: item.wrongCount / totalCount}}></div>\n            </div>\n          </div>\n        )\n      })}\n    </div>\n  )\n}\n","import React, {useState, useEffect} from 'react';\nimport Field from './Field'\nimport Timer from './Timer'\nimport Form from './Form'\nimport Results from './Results'\nimport './App.css';\n\nfunction App() {\n  const [roundsCount, setRoundsCount] = useState('')\n  const [start, setStart] = useState(false)\n  const [reset, setReset] = useState(false)\n  const [showHistory, setShowHistory] = useState(false)\n\n  const onStartPress = () => setStart(true)\n\n  const onReset = () => setReset(true)\n\n  const onChange = ({target: {value}}) => {\n    if(!isNaN(value)) {\n      setRoundsCount(value.trim())\n    }\n  }\n\n  const onShowHistory = () => {\n    setShowHistory(true)\n  }\n\n  const onHideHistory = () => {\n    setShowHistory(false)\n  }\n\n  useEffect(() => {\n    reset && setReset(false)\n  }, [reset])\n\n  if(reset) return (\n    <div className=\"App\">\n      <div className={'container'}>\n      </div>\n    </div>\n  )\n\n  if(showHistory) {\n    return (\n      <div className={'App'}>\n        <div className={'container form'}>\n          <button className={'submit_btn start_btn'} onClick={onHideHistory}>Назад</button>\n          <Results></Results>\n        </div>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"App\">\n      {start ? (\n        <div className={'container'}>\n          <Form count={Number(roundsCount) || 8} min={1} max={19} />\n          <button className={'submit_btn reset_btn'} onClick={onReset}>Заново</button>\n        </div>\n      ) : (\n        <div className={'greeting'}>\n          <h2 className={'alina'}>Привет, Алина!</h2>\n          <div className={'fieldItem'}>\n            <div className={'label'}>Сколько примеров будем решать?</div>\n            <input inputMode={'numeric'} placeholder={'Как насчет 8?'} className={'roundInput'} onChange={onChange} value={roundsCount}/>\n          </div>\n          <button className={'submit_btn start_btn'} onClick={onStartPress}>Начать</button>\n          <button className={'submit_btn start_btn'} onClick={onShowHistory}>Мои занятия</button>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}